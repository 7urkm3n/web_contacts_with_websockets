{"ast":null,"code":"var _jsxFileName = \"/home/nokat/Documents/Projects/coding_test/assignment_knt/frontend/src/contacts/main.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useState, useRef } from \"react\";\nimport { useNavigate, Link } from 'react-router-dom';\nimport config from './../config';\nimport useWs from './../useWs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState();\n  // const [ready, val, send, ws] = useWs()\n\n  // useEffect(() => {\n  //   if (ready) {\n  //     console.log(\"TEST: \", ready);\n\n  //     let f = JSON.stringify('{\"first_name\":\"Rove\", \"last_name\":\"ggg\", \"email\":\"rr@rr.com\", \"phone_number\":\"1233451234\"}')\n  //     // send(f)\n  //   }\n  // }, [ready, send]) // make sure to include send in dependency array\n\n  // const fetchContacts = async () => {\n  //   const res = await fetch(`${config.API_URL}/contacts`);\n  //   const data = await res.json();\n  //   setContacts(data);\n  // };\n\n  // useEffect(() => {\n  //   fetchContacts();\n  // }, []);\n\n  useEffect(() => {\n    const ws = new WebSocket(config.WS_URL);\n    ws.onmessage = event => {\n      const contact = JSON.parse(event.data);\n      console.log('contact :>> ', contact);\n      // setContacts((prevContacts) => [...prevContacts, contact]);\n\n      setContacts(prevContacts => prevContacts.map(c => c.id === contact.id ? {\n        ...c,\n        contact\n      } : c));\n    };\n    return () => {\n      ws.close();\n    };\n  }, []);\n  const createContact = () => {\n    console.log(\"createContact: \", contact);\n    let obj = {\n      first_name: \"ro\",\n      last_name: \"go\",\n      email: \"rr@asdb.co\",\n      phone_number: \"1234423123\"\n    };\n    const ws = new WebSocket('ws://localhost:4000/ws');\n    const c = {\n      contact: obj\n    };\n    ws.onopen = () => {\n      console.log(\"OBJ: \", obj);\n      ws.send(JSON.stringify(obj));\n    };\n    setContact('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative overflow-x-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createContact(),\n          children: \" fetch \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full text-sm text-left rtl:text-right text-gray-500 \",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"px-6 py-3\",\n                children: \"Firstname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"px-6 py-3\",\n                children: \"Lastname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"px-6 py-3\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"px-6 py-3\",\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: contacts && contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-white border-b\",\n                onClick: () => navigate(`/contacts/${contact.id}`, {\n                  state: contact\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  scope: \"row\",\n                  className: \"px-6 py-4\",\n                  children: contact.first_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4\",\n                  children: contact.last_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4\",\n                  children: contact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 font-medium text-gray-900 whitespace-nowrap\",\n                  children: contact.phone_number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, contact.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"delvgWfZjt9+4s3H102vN1jEM2U=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Fragment","useEffect","useState","useRef","useNavigate","Link","config","useWs","jsxDEV","_jsxDEV","Main","_s","navigate","contacts","setContacts","contact","setContact","ws","WebSocket","WS_URL","onmessage","event","JSON","parse","data","console","log","prevContacts","map","c","id","close","createContact","obj","first_name","last_name","email","phone_number","onopen","send","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","scope","state","_c","$RefreshReg$"],"sources":["/home/nokat/Documents/Projects/coding_test/assignment_knt/frontend/src/contacts/main.js"],"sourcesContent":["import { Fragment, useEffect, useState, useRef } from \"react\";\nimport { useNavigate, Link } from 'react-router-dom';\nimport config from './../config'\nimport useWs from './../useWs'\n\nexport const Main = () => {\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState();\n  // const [ready, val, send, ws] = useWs()\n\n  // useEffect(() => {\n  //   if (ready) {\n  //     console.log(\"TEST: \", ready);\n      \n  //     let f = JSON.stringify('{\"first_name\":\"Rove\", \"last_name\":\"ggg\", \"email\":\"rr@rr.com\", \"phone_number\":\"1233451234\"}')\n  //     // send(f)\n  //   }\n  // }, [ready, send]) // make sure to include send in dependency array\n\n  // const fetchContacts = async () => {\n  //   const res = await fetch(`${config.API_URL}/contacts`);\n  //   const data = await res.json();\n  //   setContacts(data);\n  // };\n\n  // useEffect(() => {\n  //   fetchContacts();\n  // }, []);\n\n  useEffect(() => {\n    const ws = new WebSocket(config.WS_URL);\n    ws.onmessage = (event) => {\n      const contact = JSON.parse(event.data);\n      console.log('contact :>> ', contact);\n      // setContacts((prevContacts) => [...prevContacts, contact]);\n\n      setContacts((prevContacts) => prevContacts.map(c => c.id === contact.id ? { ...c, contact } : c ));\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, []);\n\n  const createContact = () => {\n    console.log(\"createContact: \", contact);\n    \n    let obj = {\n      first_name: \"ro\",\n      last_name: \"go\",\n      email: \"rr@asdb.co\",\n      phone_number: \"1234423123\"\n    }\n\n    const ws = new WebSocket('ws://localhost:4000/ws');\n    const c = {\n      contact: obj,\n    };\n    ws.onopen = () => {\n      console.log(\"OBJ: \", obj);\n      ws.send(JSON.stringify(obj));\n    };\n    setContact('');\n  };\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Contacts</h1>\n      <div className=\"grid gap-4\">\n        <div className=\"relative overflow-x-auto\">\n          \n          <button onClick={() => createContact()}> fetch </button>\n\n          <table className=\"w-full text-sm text-left rtl:text-right text-gray-500 \">\n              <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                  <tr>\n                      <th scope=\"col\" className=\"px-6 py-3\">\n                          Firstname\n                      </th>\n                      <th scope=\"col\" className=\"px-6 py-3\">\n                          Lastname\n                      </th>\n                      <th scope=\"col\" className=\"px-6 py-3\">\n                          Email\n                      </th>\n                      <th scope=\"col\" className=\"px-6 py-3\">\n                          Phone Number\n                      </th>\n                  </tr>\n              </thead>\n              <tbody>\n              {contacts && contacts.map((contact) => (\n                <Fragment key={contact.id}>\n                  <tr className=\"bg-white border-b\" onClick={() => navigate(`/contacts/${contact.id}`, { state: contact }) }>\n                      <td scope=\"row\" className=\"px-6 py-4\">\n                          {contact.first_name}\n                      </td>\n                      <td className=\"px-6 py-4\">\n                          {contact.last_name}\n                      </td>\n                      <td className=\"px-6 py-4\">\n                          {contact.email}\n                      </td>\n                      <td className=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap\">\n                          {contact.phone_number}\n                      </td>\n                  </tr>\n                  </Fragment>\n              ))}\n              </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}